name: Deploy Cloud Run Job

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  ARTIFACT_REPO: ${{ vars.ARTIFACT_REPO }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  JOB_NAME: ${{ vars.JOB_NAME }}
  WIF_PROVIDER: ${{ vars.WIF_PROVIDER }}
  WIF_SERVICE_ACCOUNT: ${{ vars.WIF_SERVICE_ACCOUNT }}
  RUNTIME_SERVICE_ACCOUNT: ${{ vars.RUNTIME_SERVICE_ACCOUNT }}
  # Optional tunables (set as Repository variables). If unset, defaults applied in script.
  CPU: ${{ vars.CPU }}
  MEMORY: ${{ vars.MEMORY }}
  TIMEOUT: ${{ vars.TIMEOUT }}
  TASK_COUNT: ${{ vars.TASK_COUNT }}
  PARALLELISM: ${{ vars.PARALLELISM }}

jobs:
  build-and-deploy:
    name: Build and Deploy Cloud Run Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: latest
          project_id: ${{ env.PROJECT_ID }}

      - name: Validate Inputs and Set Defaults
        shell: bash
        run: |
          set -euo pipefail
          : "${PROJECT_ID:?PROJECT_ID not set in repo variables}"
          : "${REGION:?REGION not set in repo variables}"
          : "${ARTIFACT_REPO:?ARTIFACT_REPO not set in repo variables}"
          : "${IMAGE_NAME:=kilocode-automation}"
          : "${JOB_NAME:=kilocode-job}"
          : "${RUNTIME_SERVICE_ACCOUNT:?RUNTIME_SERVICE_ACCOUNT not set in repo variables}"
          : "${CPU:=2}"
          : "${MEMORY:=2Gi}"
          : "${TIMEOUT:=3600}"
          : "${TASK_COUNT:=1}"
          : "${PARALLELISM:=1}"

          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
          echo "REGION=$REGION" >> $GITHUB_ENV
          echo "ARTIFACT_REPO=$ARTIFACT_REPO" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "JOB_NAME=$JOB_NAME" >> $GITHUB_ENV
          echo "RUNTIME_SERVICE_ACCOUNT=$RUNTIME_SERVICE_ACCOUNT" >> $GITHUB_ENV
          echo "CPU=$CPU" >> $GITHUB_ENV
          echo "MEMORY=$MEMORY" >> $GITHUB_ENV
          echo "TIMEOUT=$TIMEOUT" >> $GITHUB_ENV
          echo "TASK_COUNT=$TASK_COUNT" >> $GITHUB_ENV
          echo "PARALLELISM=$PARALLELISM" >> $GITHUB_ENV

      - name: Configure Docker for Artifact Registry
        shell: bash
        run: |
          gcloud auth configure-docker "${REGION}-docker.pkg.dev" --quiet

      - name: Build and Push Image
        shell: bash
        run: |
          set -euo pipefail
          IMAGE_URI="${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/${IMAGE_NAME}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

          docker build -t "${IMAGE_URI}:${GITHUB_SHA}" -t "${IMAGE_URI}:latest" .
          docker push "${IMAGE_URI}:${GITHUB_SHA}"
          docker push "${IMAGE_URI}:latest"

      - name: Deploy Cloud Run Job (Create or Update)
        shell: bash
        run: |
          set -euo pipefail
          set -x
          IMAGE="${IMAGE_URI}:${GITHUB_SHA}"

          # Secrets mapping (ensure secrets exist in Secret Manager with same names)
          SECRETS="PROXY_HOST=PROXY_HOST:latest,PROXY_PORT=PROXY_PORT:latest,PROXY_USERNAME=PROXY_USERNAME:latest,PROXY_PASSWORD=PROXY_PASSWORD:latest,TWOCAPTCHA_API_KEY=TWOCAPTCHA_API_KEY:latest"

          if gcloud run jobs describe "${JOB_NAME}" --region "${REGION}" >/dev/null 2>&1; then
            echo "Updating existing job: ${JOB_NAME}"
            gcloud run jobs update "${JOB_NAME}" \
              --image="${IMAGE}" \
              --region="${REGION}" \
              --service-account="${RUNTIME_SERVICE_ACCOUNT}" \
              --cpu="${CPU}" \
              --memory="${MEMORY}" \
              --task-timeout="${TIMEOUT}" \
              --tasks="${TASK_COUNT}" \
              --max-retries="1" \
              --parallelism="${PARALLELISM}" \
              --set-env-vars="BROWSER_HEADLESS=true" \
              --set-secrets="${SECRETS}"
          else
            echo "Creating job: ${JOB_NAME}"
            gcloud run jobs create "${JOB_NAME}" \
              --image="${IMAGE}" \
              --region="${REGION}" \
              --service-account="${RUNTIME_SERVICE_ACCOUNT}" \
              --cpu="${CPU}" \
              --memory="${MEMORY}" \
              --task-timeout="${TIMEOUT}" \
              --tasks="${TASK_COUNT}" \
              --max-retries="1" \
              --parallelism="${PARALLELISM}" \
              --set-env-vars="BROWSER_HEADLESS=true" \
              --set-secrets="${SECRETS}"
          fi

      - name: Optional Smoke Execution (manual dispatch only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
          set -euo pipefail
          gcloud run jobs execute "${JOB_NAME}" --region "${REGION}" --wait
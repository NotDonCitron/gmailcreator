# RAG Engine Configuration

# Vector Database Configuration
vector_store:
  provider: "chroma"  # Options: chroma, faiss, pinecone, weaviate
  collection_name: "codebase_rag"
  embedding_model: "sentence-transformers/all-MiniLM-L6-v2"
  chunk_size: 1000
  chunk_overlap: 200
  max_tokens: 512
  
  # ChromaDB specific settings
  chroma:
    persist_directory: "./chroma_db"
    anonymized_telemetry: false
    
  # FAISS specific settings
  faiss:
    index_type: "IndexFlatIP"  # Inner product for cosine similarity
    normalize_embeddings: true
    
  # Pinecone specific settings
  pinecone:
    api_key: "${PINECONE_API_KEY}"
    environment: "${PINECONE_ENVIRONMENT}"
    index_name: "codebase-rag"
    
  # Weaviate specific settings
  weaviate:
    url: "${WEAVIATE_URL}"
    api_key: "${WEAVIATE_API_KEY}"

# Embedding Configuration
embeddings:
  model_name: "sentence-transformers/all-MiniLM-L6-v2"
  model_kwargs:
    device: "cpu"  # Options: cpu, cuda, mps
  encode_kwargs:
    normalize_embeddings: true
  cache_dir: "./models"

# LLM Configuration
llm:
  provider: "openai"  # Options: openai, anthropic, ollama, huggingface
  model_name: "gpt-3.5-turbo"
  temperature: 0.1
  max_tokens: 2000
  streaming: true
  
  # OpenAI specific settings
  openai:
    api_key: "${OPENAI_API_KEY}"
    organization: "${OPENAI_ORGANIZATION}"
    
  # Anthropic specific settings
  anthropic:
    api_key: "${ANTHROPIC_API_KEY}"
    
  # Ollama specific settings
  ollama:
    base_url: "http://localhost:11434"
    model: "llama2"
    
  # HuggingFace specific settings
  huggingface:
    api_key: "${HUGGINGFACE_API_KEY}"
    endpoint_url: "${HUGGINGFACE_ENDPOINT_URL}"

# Code Parser Configuration
code_parser:
  supported_extensions:
    - ".py"
    - ".js"
    - ".ts"
    - ".jsx"
    - ".tsx"
    - ".java"
    - ".cpp"
    - ".c"
    - ".h"
    - ".cs"
    - ".rb"
    - ".go"
    - ".rs"
    - ".php"
    - ".swift"
    - ".kt"
    - ".scala"
    - ".r"
    - ".m"
    - ".mm"
  
  ignore_patterns:
    - "__pycache__"
    - ".git"
    - ".svn"
    - ".hg"
    - "node_modules"
    - "venv"
    - "env"
    - ".venv"
    - ".env"
    - "dist"
    - "build"
    - "target"
    - "*.egg-info"
    - ".pytest_cache"
    - ".mypy_cache"
    - ".coverage"
    - "htmlcov"
    - ".tox"
    - ".nox"
    - ".hypothesis"
    - "*.pyc"
    - "*.pyo"
    - "*.pyd"
    - "*.so"
    - "*.dylib"
    - "*.dll"
    - "*.exe"
    - "*.bin"
    - "*.dat"
    - "*.db"
    - "*.sqlite"
    - "*.sqlite3"
    - "*.log"
    - "*.tmp"
    - "*.temp"
    - "*.bak"
    - "*.swp"
    - "*.swo"
    - "*~"
    - ".DS_Store"
    - "Thumbs.db"
  
  max_file_size: 1048576  # 1MB in bytes
  include_docstrings: true
  include_comments: true
  extract_functions: true
  extract_classes: true
  extract_methods: true
  extract_imports: true
  extract_variables: true

# Repository Configuration
repositories:
  # Local repositories to index
  local:
    - path: "./archon"
      name: "archon"
      description: "Main Archon project"
      branch: "main"
      auto_update: true
      
    - path: "./gmailcreator"
      name: "gmailcreator"
      description: "Gmail Creator project"
      branch: "main"
      auto_update: true
  
  # External repositories to index
  external:
    - url: "https://github.com/microsoft/vscode"
      name: "vscode"
      description: "Visual Studio Code editor"
      branch: "main"
      local_path: "./external_repos/vscode"
      auto_clone: false
      auto_update: false
      
    - url: "https://github.com/facebook/react"
      name: "react"
      description: "React JavaScript library"
      branch: "main"
      local_path: "./external_repos/react"
      auto_clone: false
      auto_update: false

# Query Configuration
query:
  max_results: 10
  similarity_threshold: 0.7
  rerank_results: true
  rerank_model: "cross-encoder/ms-marco-MiniLM-L-6-v2"
  rerank_top_k: 5
  
  # Query preprocessing
  preprocessing:
    remove_stopwords: true
    expand_acronyms: true
    spell_correction: true
    synonym_expansion: true
  
  # Response generation
  response:
    max_length: 2000
    include_source_references: true
    include_code_snippets: true
    format_as_markdown: true

# Caching Configuration
caching:
  enabled: true
  cache_dir: "./cache"
  max_cache_size: 1073741824  # 1GB in bytes
  cache_ttl: 86400  # 24 hours in seconds
  cache_embeddings: true
  cache_queries: true
  cache_responses: true

# Logging Configuration
logging:
  level: "INFO"  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "./logs/rag_engine.log"
  max_file_size: 10485760  # 10MB
  backup_count: 5
  console_output: true

# Performance Configuration
performance:
  batch_size: 32
  max_workers: 4
  use_multiprocessing: true
  use_async: true
  embedding_batch_size: 16
  query_batch_size: 8

# Security Configuration
security:
  sanitize_input: true
  validate_output: true
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_size: 10
  api_key_required: false
  allowed_origins:
    - "http://localhost:3000"
    - "http://localhost:8080"
    - "http://127.0.0.1:3000"
    - "http://127.0.0.1:8080"

# Dashboard Configuration
dashboard:
  enabled: true
  host: "0.0.0.0"
  port: 8501
  debug: false
  theme: "dark"
  auto_reload: true
  
  # Streamlit specific settings
  streamlit:
    server:
      port: 8501
      address: "0.0.0.0"
      baseUrlPath: ""
      enableCORS: false
      enableXsrfProtection: true
    browser:
      serverAddress: "localhost"
      serverPort: 8501
    theme:
      primaryColor: "#FF4B4B"
      backgroundColor: "#0E1117"
      secondaryBackgroundColor: "#262730"
      textColor: "#FAFAFA"
      font: "sans serif"

# API Configuration
api:
  enabled: true
  host: "0.0.0.0"
  port: 8000
  debug: false
  cors_enabled: true
  cors_origins:
    - "*"
  rate_limiting:
    enabled: true
    default_limit: "100 per hour"
  
  # Endpoints
  endpoints:
    health: "/health"
    query: "/api/v1/query"
    search: "/api/v1/search"
    documents: "/api/v1/documents"
    repositories: "/api/v1/repositories"
    stats: "/api/v1/stats"

# Testing Configuration
testing:
  enabled: true
  test_data_dir: "./test_data"
  mock_external_services: true
  generate_test_reports: true
  coverage_threshold: 80

# Development Configuration
development:
  hot_reload: true
  debug_mode: true
  profiling_enabled: false
  memory_tracking: false
  log_sql_queries: false

# External Services Configuration
external_services:
  github:
    token: "${GITHUB_TOKEN}"
    api_url: "https://api.github.com"
    rate_limit_delay: 1.0
    
  gitlab:
    token: "${GITLAB_TOKEN}"
    api_url: "https://gitlab.com/api/v4"
    rate_limit_delay: 1.0
    
  twilio:
    account_sid: "${TWILIO_ACCOUNT_SID}"
    auth_token: "${TWILIO_AUTH_TOKEN}"
    phone_number: "${TWILIO_PHONE_NUMBER}"
    
  onlinesim:
    api_key: "${ONLINESIM_API_KEY}"
    api_url: "https://onlinesim.io/api"
    
  openai:
    api_key: "${OPENAI_API_KEY}"
    organization: "${OPENAI_ORGANIZATION}"
    
  anthropic:
    api_key: "${ANTHROPIC_API_KEY}"
    
  huggingface:
    api_key: "${HUGGINGFACE_API_KEY}"
    endpoint_url: "${HUGGINGFACE_ENDPOINT_URL}"

# Feature Flags
features:
  semantic_search: true
  code_completion: true
  documentation_generation: true
  code_review: true
  bug_detection: true
  refactoring_suggestions: true
  performance_analysis: true
  security_analysis: true
  dependency_analysis: true
  test_generation: true
  multi_language_support: true
  real_time_indexing: false
  collaborative_features: false
  advanced_analytics: true
  custom_plugins: false